[{"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\index.js":"1","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\App.js":"2","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\reducers\\index.js":"3","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\styles.js":"4","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\actions\\posts.js":"5","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Form\\Form.js":"6","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\Posts.js":"7","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\reducers\\posts.js":"8","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\constants\\actionTypes.js":"9","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Form\\styles.js":"10","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\styles.js":"11","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\Post\\Post.js":"12","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\api\\index.js":"13","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\Post\\styles.js":"14"},{"size":590,"mtime":1613034569482,"results":"15","hashOfConfig":"16"},{"size":1557,"mtime":1615824031726,"results":"17","hashOfConfig":"16"},{"size":299,"mtime":1611826178429,"results":"18","hashOfConfig":"16"},{"size":659,"mtime":1614697306919,"results":"19","hashOfConfig":"16"},{"size":1729,"mtime":1615238159705,"results":"20","hashOfConfig":"16"},{"size":2737,"mtime":1615237428329,"results":"21","hashOfConfig":"16"},{"size":890,"mtime":1615238328781,"results":"22","hashOfConfig":"16"},{"size":850,"mtime":1615315625727,"results":"23","hashOfConfig":"16"},{"size":138,"mtime":1614698155172,"results":"24","hashOfConfig":"16"},{"size":449,"mtime":1612426939772,"results":"25","hashOfConfig":"16"},{"size":280,"mtime":1611765805443,"results":"26","hashOfConfig":"16"},{"size":2035,"mtime":1615381264657,"results":"27","hashOfConfig":"16"},{"size":653,"mtime":1615324369978,"results":"28","hashOfConfig":"16"},{"size":1013,"mtime":1611765854378,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"jaihv2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\index.js",[],["61","62"],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\App.js",["63"],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\reducers\\index.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\styles.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\actions\\posts.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Form\\Form.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\reducers\\posts.js",["64"],"//function combining the state the action with different scenarios, the state is posts\r\n//replaced reducer by export default because we do not need it here\r\nimport { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes';\r\n\r\nexport default (posts = [], action) => {\r\n  switch (action.type) {\r\n    case FETCH_ALL:\r\n      return action.payload;\r\n      case CREATE://spread posts and get the action payload\r\n      return [...posts, action.payload];\r\n      case UPDATE:\r\n        //if the post._id matches, return the payload with the newly updated post\r\n        return posts.map((post) => post._id === action.payload._id? action.payload:post);\r\n    case DELETE:\r\n      //filter the posts deleted and return them\r\n      return posts.filter((post) => post._id !== action.payload);\r\n   \r\n    \r\n    \r\n    default:\r\n      return posts;\r\n  }\r\n};\r\n","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\Post\\Post.js",["65"],"import React from 'react';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core/';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport useStyles from './styles';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} />\r\n      <div className={classes.overlay}>\r\n        <Typography variant=\"h6\">{post.creator}</Typography>\r\n        <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n      </div>\r\n      <div className={classes.overlay2}>\r\n        <Button style={{ color: 'white' }} size=\"small\" onClick={() => setCurrentId(post._id)}><MoreHorizIcon fontSize=\"default\" /></Button>\r\n      </div>\r\n      <div className={classes.details}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n      </div>\r\n      <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}> </Button>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}><DeleteIcon fontSize=\"small\" /> Delete</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;","C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\api\\index.js",[],"C:\\Users\\potato\\Desktop\\Nouveau dossier\\client\\src\\components\\Posts\\Post\\styles.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":3,"column":29,"nodeType":"72","messageId":"73","endLine":3,"endColumn":39},{"ruleId":"74","severity":1,"message":"75","line":5,"column":1,"nodeType":"76","endLine":23,"endColumn":3},{"ruleId":"70","severity":1,"message":"77","line":3,"column":8,"nodeType":"72","messageId":"73","endLine":3,"endColumn":22},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ThumbUpAltIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]